version: '3.9'

services:
  mws-app:
    image: ${MWS_IMAGE:-mws:10.15}  # replace with your actual image
    ports:
      - "8585:8585"
    container_name: mws
    environment:
      DB_TYPE: "postgres"
      DB_URL: "jdbc:wm:postgresql://wmdb:5432;databaseName=wm"
      DB_USERNAME: "wm"
      DB_PASSWORD: "wm"
      NODE_NAME: "default-node"
      INSTANCE_NAME: "default"
      SAG_HOME: "/opt/softwareag"        # example default value
    volumes:
      - ./mws/apps:/opt/softwareag/MWS/volumes/apps
      - ./mws/configs:/opt/softwareag/MWS/volumes/configs
      - ./mws/data:/opt/softwareag/MWS/volumes/data
      - ./mws/libs:/opt/softwareag/MWS/volumes/libs
      - ./mws/logs:/opt/softwareag//MWS/volumes/logs
      - ./mws/patches:/opt/softwareag/MWS/volumes/patches
      - init:/init
    user: "1724:1724"
    restart: unless-stopped
    networks:
      - localdev
    depends_on:
      - db-init
  
  msr:
    environment:
      - HOST_DIR=/server
      - EXTERNALIZE_PACKAGES=false
      - PERSIST_CONFIGS=true
      - PERSIST_LOGS=false
      - SAG_IS_CONFIG_PROPERTIES=/server/application.properties
      - SAG_IS_LICENSE_FILE=/license/licenseKey.xml
      - SERVICE_NAME=msr-dev
    image: ${MSR_IMAGE:-msr-testsuite:10.15} # replace with your actual image
    volumes:
      - ./msr/license:/license
      - msr-config:/server:Z
      - ${GIT_PACKAGE_ROOT}:/git:Z
      - msr-packages:/opt/softwareag/IntegrationServer/packages
    ports:
      - "5555:5555"
      - "5543:5543"
      - "9999:9999"
    restart: unless-stopped
    networks:
      - localdev

  wmdb:
    image: docker.io/library/postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: wm
      POSTGRES_PASSWORD: wm
      POSTGRES_DB: wm
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - localdev

  db-init:
    image: dcc:10.15
    restart: "no"
    depends_on:
      - wmdb
    volumes:
      - ./dcc/logs:/opt/softwareag/common/db/logs/
      - init:/init
    networks:
      - localdev
    entrypoint: [ "sh", "-c" ]
    command: >
      "/opt/softwareag/common/db/bin/dbConfigurator.sh -a create -pr MWS,PRE,Monitor,IS -u wm -p wm -d postgres -l jdbc:wm:postgresql://wmdb:5432;databaseName=wm && touch /init/ready"

    healthcheck:
      test: ["CMD", "test", "-f", "/init/ready"]  # Or check logs, endpoint, etc.
      interval: 1s
      retries: 5

networks:
  localdev:

volumes:
  db_data:  
  init:
  msr-packages:
  msr-config:

